openapi: 3.0.3
info:
  title: Service Inscription API
  description: Service Inscription API
  version: 1.0.0
servers:
  - url: 'http://localhost:9003'
paths:
  /inscriptions/{trip_id}:
    parameters:
      - name: trip_id
        in: path
        required: true
        schema:
          type: integer
          example: 38
        description: ID of the trip
    get:
      summary: Get all passengers of a trip
      responses:
        404:
          description: No trip found with this ID
        200:
          description: Sent trip's inscriptions
          content:
            'application/json':
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/passengers'
    delete:
      summary: Delete all passengers of a trip
      responses:
        404:
          description: No trip found with this ID
        202:
          description: Trip's inscriptions are deleted
  /inscriptions/passengers/{passenger_id}:
    parameters:
      - name: passenger_id
        in: path
        required: true
        schema:
          type: integer
          example: 38
        description: ID of the passenger
    get:
        summary: Get all trips of a passenger
        responses:
            404:
              description: No passenger found with this ID
            200:
              description: Sent passenger's trips
              content:
                'application/json':
                  schema:
                    $ref: '#/components/schemas/passenger_trips'
    delete:
        summary: Delete all trips of a passenger
        responses:
            404:
              description: No passenger found with this ID
            202:
              description: Passenger's trips are deleted


  /inscriptions/{trip_id}/{passenger_id}:
    parameters:
      - name: trip_id
        in: path
        required: true
        schema:
          type: integer
          example: 38
        description: ID of the trip
      - name: passenger_id
        in: path
        required: true
        schema:
          type: integer
          example: 12
        description: ID of the passenger
    post:
      summary: Create inscription
      responses:
        '201':
          description: inscription created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inscription'
        '400':
          description: Bad request
        '409':
          description: Conflict
    get:
      summary: Get inscription
      responses:
        404:
          description: No inscription found with this ID
        200:
          description: Sent inscription
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/inscription'

    delete:
      summary: Delete inscription
      responses:
        404:
          description: No inscription found with this ID
        202:
          description: Inscription is deleted

    put:
        summary: Update inscription
        parameters:
          - name: status
            in: query
            required: true
            schema:
              type: string
              enum:
                - accepted
                - refused
            description: New status of the passenger
        responses:
            404:
              description: No inscription found with this ID
            200:
              description: Inscription is updated


components:
  schemas:
    inscription:
      type: object
      properties:
        id:
          type: integer
        trip_id:
          type: integer
        passenger_id:
          type: integer
        status:
          type: string
          enum:
            - pending
            - accepted
            - refused
      example:
        id: 1
        trip_id: 38
        passenger_id: 2
        status: pending
    passengers:
      type: object
      properties:
        pending:
          type: array
          items:
            $ref: '#/components/schemas/user'
        accepted:
          type: array
          items:
            $ref: '#/components/schemas/user'
        refused:
          type: array
          items:
            $ref: '#/components/schemas/user'

    passenger_trips:
      type: object
      properties:
        pending:
          type: array
          items:
            $ref: '#/components/schemas/trip'
        accepted:
          type: array
          items:
            $ref: '#/components/schemas/trip'
        refused:
          type: array
          items:
            $ref: '#/components/schemas/trip'
    user:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
      example:
        id: 1
        email: gregory.seront@vinci.be
        firstname: Gregory
        lastname: Seront
    trip:
      type: object
      properties:
        id:
          type: integer
        origin:
          $ref: '#/components/schemas/position'
        destination:
          $ref: '#/components/schemas/position'
        departure:
          type: string
          description: Date in ISO 8601, YYYY-MM-DD
        driver_id:
          type: integer
        available_seating:
          type: integer
      example:
        id: 38
        origin:
          latitude: 50.849372
          longitude: 4.451009
        destination:
          latitude: 50.849372
          longitude: 4.451009
        departure: 2022-10-24 10:45:00
        driver_id: 12
        available_seating: 2
    position:
      type: object
      properties:
        latitude:
          type: number
        longitude:
          type: number
      example:
        latitude: 50.849372
        longitude: 4.451009